@import 'mixins/mixins.scss';
@import 'common/var.scss';

@mixin link-underline($color) {
    &.is-underline {
        position: relative;
        &:hover::after {
            content: '';
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            border-bottom: 1px solid $color;
        }
    } 
}

@mixin link-disabled($color) {
    cursor: not-allowed;
    color: mix($--color-white, $color);

    &:hover {
        color: mix($--color-white, $color);
    }
}

$typeMap : (
    primary: $--link-primary-font-color, 
    danger: $--link-danger-font-color, 
    success: $--link-success-font-color, 
    warning: $--link-warning-font-color, 
    info: $--link-info-font-color,
);

@include block(link) {
    text-decoration: none;
    color: $--link-color;
    cursor: pointer;
    font-size: $--link-font-size;
    font-weight: $--link-font-weight;
    &:hover,
    &:focus {
        color: $--color-primary;
    }

    @include link-underline($--color-primary);
    @include is(disabled) {
        @include link-disabled($--link-color);
    }

    @each $type, $typeColor in $typeMap {
        @include modifier($type) {
            color: $typeColor;
    
            &:hover,
            &:focus {
                color: mix($--color-white, $typeColor, $--link-hover-dilution);
            }
    
            @include link-underline($typeColor);
            @include is(disabled) {
                @include link-disabled($typeColor);
            }
        }
    }
}